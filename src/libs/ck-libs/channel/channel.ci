
module channel {
  template <typename T>
  chare CkChannel {
    entry CkChannel();
    entry void send(T);
    entry [sync] T receive();
    entry [threaded] void receive(CkCallback);
  };

  template <int N, typename T>
  chare CkMultiChannel {
    entry CkMultiChannel();
    entry void send(int, T);
    entry [sync] T receive(int);
    entry [sync] std::pair<int, T> receiveFromAny(int channels[numChannels], int numChannels);

    entry [threaded] void receive(int, CkCallback);
    entry [threaded] void receiveFromAny(int channels[numChannels], int numChannels, CkCallback cb);

    entry [sync] void waitAll(int channels[numChannels], int numChannels);
    entry [sync] void waitN(int channel, int numMsgs);
  };
};
