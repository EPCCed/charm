mainmodule jacobi2d {
  readonly CProxy_Main main_proxy;
  readonly CProxy_Block block_proxy;
  readonly int grid_size;
  readonly int block_size;
  readonly int n_chares;
  readonly int n_iters;
  readonly bool use_zerocopy;
  readonly bool print;

  mainchare Main {
    entry Main(CkArgMsg* m);
    entry [reductiontarget] void initDone();
    entry [reductiontarget] void commDone();
    entry [reductiontarget] void updateDone();
    entry [reductiontarget] void done();
    entry void printDone();
  };

  array [2D] Block {
    entry Block(void);
    entry void init();
    entry void receiveGhostsZC(int ref, int dir, int w, nocopydevice double gh[w]);
    entry void receiveGhostsReg(int ref, int dir, int w, double gh[w]);

    entry void exchangeGhosts() {
      serial {
        sendGhosts();
      }

      for (remote_count = 0; remote_count < neighbors; remote_count++) {
        if (use_zerocopy) {
          when receiveGhostsZC[my_iter](int ref, int dir, int w, nocopydevice double buf[w]) {
            serial {
              processGhostsZC(dir, w, buf);
            }
          }
        }
        else {
          when receiveGhostsReg[my_iter](int ref, int dir, int w, double buf[w]) {
            serial {
              processGhostsReg(dir, w, buf);
            }
          }
        }
      }

      serial {
        CkCallback cb(CkReductionTarget(Main, commDone), main_proxy);
        contribute(cb);
      }
    }

    entry void update();
    entry void print();
  };
};
